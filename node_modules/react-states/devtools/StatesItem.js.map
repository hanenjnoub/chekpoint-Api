{"version":3,"file":"StatesItem.js","sourceRoot":"","sources":["../src/devtools/StatesItem.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAClD,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAElC,MAAM,CAAC,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAClC,CAAC,EACC,EAAE,EACF,OAAO,EACP,WAAW,EACX,cAAc,EACd,SAAS,EACT,UAAU,EACV,kBAAkB,GAanB,EAAE,EAAE;IACH,MAAM,YAAY,GAAG,OAAO,CAAC,IAAI,CAC/B,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,OAAO,CACI,CAAC;IAEtC,OAAO,CACL,4BACE,KAAK,EAAE;YACL,OAAO,EAAE,QAAQ;YACjB,QAAQ,EAAE,MAAM;YAChB,YAAY,EAAE,aAAa,MAAM,CAAC,MAAM,EAAE;YAC1C,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG;SAC7B;QAED,6BACE,KAAK,EAAE;gBACL,MAAM,EAAE,SAAS;gBACjB,YAAY,EAAE,QAAQ;gBACtB,SAAS,EAAE,QAAQ;gBACnB,OAAO,EAAE,MAAM;gBACf,UAAU,EAAE,QAAQ;aACrB,EACD,OAAO,EAAE,GAAG,EAAE;gBACZ,cAAc,CAAC,EAAE,CAAC,CAAC;YACrB,CAAC;YAED,8BACE,KAAK,EAAE;oBACL,KAAK,EAAE,MAAM,CAAC,IAAI;oBAClB,WAAW,EAAE,QAAQ;oBACrB,QAAQ,EAAE,MAAM;iBACjB,IAEA,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAClB;YACP,8BACE,KAAK,EAAE;oBACL,KAAK,EAAE,MAAM,CAAC,SAAS;oBACvB,UAAU,EAAE,MAAM;oBAClB,WAAW,EAAE,QAAQ;iBACtB,IAEA,EAAE,CACE;YAAC,GAAG;YACX,8BAAM,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,EAAE,IAClC,YAAY,CAAC,KAAK,CAAC,KAAK,CACpB,CACH;QACL,UAAU,CAAC,CAAC,CAAC,CACZ,oBAAC,cAAc,IACb,kBAAkB,EAAE,kBAAkB,EACtC,OAAO,EAAE,OAAO,EAChB,WAAW,EAAE,WAAW,EACxB,YAAY,EAAE,YAAY,CAAC,KAAK,CAAC,KAAK,GACtC,CACH,CAAC,CAAC,CAAC,IAAI,CACL,CACN,CAAC;AACJ,CAAC,CACF,CAAC","sourcesContent":["import * as React from \"react\";\nimport { HistoryItem } from \"./Manager\";\nimport { ExpandedStates } from \"./ExpandedStates\";\nimport { colors } from \"./styles\";\n\nexport const StatesItem = React.memo(\n  ({\n    id,\n    history,\n    transitions,\n    toggleExpanded,\n    isMounted,\n    isExpanded,\n    triggerTransitions,\n  }: {\n    id: string;\n    toggleExpanded: (id: string) => void;\n    history: HistoryItem[];\n    transitions: {\n      [key: string]: {\n        [key: string]: Function;\n      };\n    };\n    isMounted: boolean;\n    isExpanded: boolean;\n    triggerTransitions: () => void;\n  }) => {\n    const currentState = history.find(\n      (item) => item.type === \"state\"\n    )! as HistoryItem & { type: \"state\" };\n\n    return (\n      <li\n        style={{\n          padding: \"0 2rem\",\n          fontSize: \"18px\",\n          borderBottom: `1px solid ${colors.border}`,\n          opacity: isMounted ? 1 : 0.5,\n        }}\n      >\n        <div\n          style={{\n            cursor: \"pointer\",\n            marginBottom: \"0.5rem\",\n            marginTop: \"0.5rem\",\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n          onClick={() => {\n            toggleExpanded(id);\n          }}\n        >\n          <span\n            style={{\n              color: colors.text,\n              marginRight: \"0.5rem\",\n              fontSize: \"14px\",\n            }}\n          >\n            {isExpanded ? \"▼\" : \"▶\"}\n          </span>\n          <span\n            style={{\n              color: colors.highlight,\n              fontWeight: \"bold\",\n              marginRight: \"0.5rem\",\n            }}\n          >\n            {id}\n          </span>{\" \"}\n          <span style={{ color: colors.orange }}>\n            {currentState.state.state}\n          </span>\n        </div>\n        {isExpanded ? (\n          <ExpandedStates\n            triggerTransitions={triggerTransitions}\n            history={history}\n            transitions={transitions}\n            currentState={currentState.state.state}\n          />\n        ) : null}\n      </li>\n    );\n  }\n);\n"]}