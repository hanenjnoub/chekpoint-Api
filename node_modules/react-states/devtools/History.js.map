{"version":3,"file":"History.js","sourceRoot":"","sources":["../src/devtools/History.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAClC,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAE9C,MAAM,CAAC,MAAM,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,EAAE,aAAa,EAAsD,EAAE,EAAE;IACnH,OAAO,CACL,4BACE,KAAK,EAAE;YACL,aAAa,EAAE,MAAM;YACrB,OAAO,EAAE,CAAC;YACV,KAAK,EAAE,MAAM,CAAC,IAAI;YAClB,YAAY,EAAE,QAAQ;YACtB,QAAQ,EAAE,MAAM;SACjB,IAEA,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;YACzB,OAAO,CACL,4BACE,GAAG,EAAE,KAAK,EACV,KAAK,EAAE;oBACL,OAAO,EAAE,MAAM;oBACf,UAAU,EAAE,QAAQ;oBACpB,YAAY,EAAE,SAAS;iBACxB;gBAED,8BACE,KAAK,EAAE;wBACL,WAAW,EAAE,SAAS;wBACtB,QAAQ,EAAE,MAAM;wBAChB,KAAK,EAAE,MAAM,CAAC,MAAM;qBACrB,YAGI;gBACP,8BACE,KAAK,EAAE;wBACL,WAAW,EAAE,SAAS;qBACvB,IAEA,IAAI,CAAC,KAAK,CAAC,KAAK,CACZ;gBACP,oBAAC,cAAc,IAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,KAAK,SAAG,CACxC,CACN,CAAC;SACH;QAED,IAAI,IAAI,CAAC,OAAO,IAAI,aAAa,EAAE;YACjC,OAAO,IAAI,CAAC;SACb;QAED,OAAO,CACL,4BACE,GAAG,EAAE,KAAK,EACV,KAAK,EAAE;gBACL,OAAO,EAAE,MAAM;gBACf,UAAU,EAAE,QAAQ;gBACpB,YAAY,EAAE,SAAS;gBACvB,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;aAChC;YAED,8BACE,KAAK,EAAE;oBACL,WAAW,EAAE,SAAS;oBACtB,QAAQ,EAAE,MAAM;oBAChB,KAAK,EAAE,MAAM,CAAC,KAAK;iBACpB,aAGI;YACP,8BAAM,KAAK,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,IAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAQ;YAClE,oBAAC,cAAc,IAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,SAAG,CACzC,CACN,CAAC;IACJ,CAAC,CAAC,CACC,CACN,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["import * as React from 'react';\nimport { HistoryItem } from './Manager';\nimport { colors } from './styles';\nimport ValueInspector from './ValueInspector';\n\nexport const History = React.memo(({ history, filterIgnored }: { history: HistoryItem[]; filterIgnored: boolean }) => {\n  return (\n    <ul\n      style={{\n        listStyleType: 'none',\n        padding: 0,\n        color: colors.text,\n        marginBottom: '0.5rem',\n        fontSize: '14px',\n      }}\n    >\n      {history.map((item, index) => {\n        if (item.type === 'state') {\n          return (\n            <li\n              key={index}\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                marginBottom: '0.25rem',\n              }}\n            >\n              <span\n                style={{\n                  marginRight: '0.25rem',\n                  fontSize: '12px',\n                  color: colors.orange,\n                }}\n              >\n                state\n              </span>\n              <span\n                style={{\n                  marginRight: '0.25rem',\n                }}\n              >\n                {item.state.state}\n              </span>\n              <ValueInspector value={item.state} small />\n            </li>\n          );\n        }\n\n        if (item.ignored && filterIgnored) {\n          return null;\n        }\n\n        return (\n          <li\n            key={index}\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              marginBottom: '0.25rem',\n              opacity: item.ignored ? 0.5 : 1,\n            }}\n          >\n            <span\n              style={{\n                marginRight: '0.25rem',\n                fontSize: '12px',\n                color: colors.green,\n              }}\n            >\n              action\n            </span>\n            <span style={{ marginRight: '0.25rem' }}>{item.action.type}</span>\n            <ValueInspector value={item.action} small />\n          </li>\n        );\n      })}\n    </ul>\n  );\n});\n"]}