{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/test/index.tsx"],"names":[],"mappings":";;;AAAA,kDAAgD;AAGhD,SAAgB,aAAa,CAC3B,eAAwB,EACxB,cAAqE;IAErE,qEAAqE;IACrE,mEAAmE;IACnE,mEAAmE;IACnE,uEAAuE;IACvE,MAAM,aAAa,GAAM,CAAC,EAAE,EAAE,GAAG,EAAE,GAAE,CAAC,CAAQ,CAAC;IAC/C,MAAM,aAAa,GAAG,GAAG,EAAE;QACzB,MAAM,oBAAoB,GAAG,eAAe,EAAE,CAAC;QAC/C,iCAAiC;QACjC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YAC5C,OAAO,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QACH,2CAA2C;QAC3C,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,EAAE;YACnD,aAAa,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,oBAAoB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACvD,CAAC,CAAC,CAAC;QACH,kDAAkD;QAClD,6BAA6B;QAC7B,aAAa,CAAC,CAAC,CAAC,GAAG,oBAAoB,CAAC,CAAC,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAC;IACd,CAAC,CAAC;IACF,cAAM,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC;IACtC,OAAO,aAAa,CAAC;AACvB,CAAC;AA1BD,sCA0BC;AAED;;GAEG;AACU,QAAA,UAAU,GAAG,aAAa,CAAC","sourcesContent":["import { render } from '@testing-library/react';\nimport React from 'react';\n\nexport function renderReducer<T extends [any, React.Dispatch<any>]>(\n  reducerCallback: () => T,\n  renderCallback: (UseStates: React.FC) => Parameters<typeof render>[0],\n) {\n  // We create an emmpty context object only used for the testing, this\n  // context will be mutated with any updates from the statesReducer.\n  // NOTE! This strategy will not allow to compare the context object\n  // itself in the test, but can not see any reason why you would want to\n  const statesReducer: T = [{}, () => {}] as any;\n  const HookComponent = () => {\n    const updatedStatesReducer = reducerCallback();\n    // We clean up the testing object\n    Object.keys(statesReducer[0]).forEach((key) => {\n      delete statesReducer[0][key];\n    });\n    // We update from the updated statesReducer\n    Object.keys(updatedStatesReducer[0]).forEach((key) => {\n      statesReducer[0][key] = updatedStatesReducer[0][key];\n    });\n    // We update the dispatcher as well, though really\n    // only needed the first time\n    statesReducer[1] = updatedStatesReducer[1];\n    return null;\n  };\n  render(renderCallback(HookComponent));\n  return statesReducer;\n}\n\n/**\n * @deprecated\n */\nexport const renderHook = renderReducer;\n"]}