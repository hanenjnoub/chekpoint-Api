"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StatesItem = void 0;
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
const ExpandedStates_1 = require("./ExpandedStates");
const styles_1 = require("./styles");
exports.StatesItem = React.memo(({ id, history, transitions, toggleExpanded, isMounted, isExpanded, triggerTransitions, }) => {
    const currentState = history.find((item) => item.type === "state");
    return (React.createElement("li", { style: {
            padding: "0 2rem",
            fontSize: "18px",
            borderBottom: `1px solid ${styles_1.colors.border}`,
            opacity: isMounted ? 1 : 0.5,
        } },
        React.createElement("div", { style: {
                cursor: "pointer",
                marginBottom: "0.5rem",
                marginTop: "0.5rem",
                display: "flex",
                alignItems: "center",
            }, onClick: () => {
                toggleExpanded(id);
            } },
            React.createElement("span", { style: {
                    color: styles_1.colors.text,
                    marginRight: "0.5rem",
                    fontSize: "14px",
                } }, isExpanded ? "▼" : "▶"),
            React.createElement("span", { style: {
                    color: styles_1.colors.highlight,
                    fontWeight: "bold",
                    marginRight: "0.5rem",
                } }, id),
            " ",
            React.createElement("span", { style: { color: styles_1.colors.orange } }, currentState.state.state)),
        isExpanded ? (React.createElement(ExpandedStates_1.ExpandedStates, { triggerTransitions: triggerTransitions, history: history, transitions: transitions, currentState: currentState.state.state })) : null));
});
//# sourceMappingURL=StatesItem.js.map