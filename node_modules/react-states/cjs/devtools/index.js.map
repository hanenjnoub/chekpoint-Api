{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/devtools/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Resizer } from './Resizer';\nimport { managerContext } from '../';\n\nimport { Manager } from './Manager';\nimport { StatesItem } from './StatesItem';\nimport { colors } from './styles';\n\nexport const useDevtoolsManager = () => React.useContext(managerContext);\n\nexport const DevtoolsProvider = ({ children, show = true }: { children: React.ReactNode; show?: boolean }) => {\n  return (\n    <managerContext.Provider value={new Manager()}>\n      <div suppressHydrationWarning>{typeof document === 'undefined' || !show ? null : <DevtoolsManager />}</div>\n      {children}\n    </managerContext.Provider>\n  );\n};\n\nconst IS_OPEN_STORAGE_KEY = 'react_states_isOpen';\nconst WIDTH_STORAGE_KEY = 'react_states_width';\n\nexport const DevtoolsManager = () => {\n  const manager = React.useContext(managerContext);\n  const [statesData, setStatesData] = React.useState(manager.states);\n  const [expandedStates, setExpandedStates] = React.useState([] as string[]);\n  const [isOpen, toggleOpen] = React.useState<boolean>(\n    JSON.parse(localStorage.getItem(IS_OPEN_STORAGE_KEY) || 'false'),\n  );\n  const [width, setWidth] = React.useState(() => JSON.parse(localStorage.getItem(WIDTH_STORAGE_KEY) || '\"400px\"'));\n\n  React.useEffect(() => manager.subscribe(setStatesData), [manager]);\n\n  const toggleExpanded = React.useCallback(\n    (id) => {\n      setExpandedStates((current) =>\n        current.includes(id) ? current.filter((existingId) => existingId !== id) : current.concat(id),\n      );\n    },\n    [setExpandedStates],\n  );\n\n  React.useEffect(() => {\n    localStorage.setItem(IS_OPEN_STORAGE_KEY, JSON.stringify(isOpen));\n  }, [isOpen]);\n\n  return (\n    <div\n      suppressHydrationWarning\n      style={{\n        position: 'fixed',\n        right: 0,\n        fontFamily: 'monospace',\n        top: 0,\n        height: '100vh',\n        width: isOpen ? width : '10px',\n        backgroundColor: colors.background,\n        zIndex: 9999999999999,\n      }}\n    >\n      <Resizer\n        onResize={(width) => {\n          setWidth(width);\n          localStorage.setItem(WIDTH_STORAGE_KEY, JSON.stringify(`${width}px`));\n        }}\n        onClick={() => toggleOpen((current) => !current)}\n        isOpen={isOpen}\n      />\n\n      {isOpen ? (\n        <ul\n          style={{\n            listStyleType: 'none',\n            padding: 0,\n            overflowY: 'scroll',\n            height: '100%',\n            boxSizing: 'border-box',\n          }}\n        >\n          {Object.keys(statesData).map((id) => {\n            const data = statesData[id];\n\n            return (\n              <StatesItem\n                key={id}\n                id={id}\n                transitions={data.transitions}\n                history={data.history}\n                isMounted={data.isMounted}\n                isExpanded={expandedStates.includes(id)}\n                toggleExpanded={toggleExpanded}\n                triggerTransitions={data.triggerTransitions}\n              />\n            );\n          })}\n        </ul>\n      ) : null}\n    </div>\n  );\n};\n"]}